// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(uuid())
  email    String     @unique
  name     String
  password String
  posts    Post[]
  likes    Like[]
  views    View[]
  User     Follower[] @relation("user")
  Follower Follower[] @relation("follower")

  // followedBy Follower[] @relation("follower")
  // following  Follower[] @relation("following")
}

model Post {
  id          String   @id @default(uuid())
  title       String
  description String
  image_url   String
  User        User     @relation(fields: [userId], references: [id])
  userId      String
  likes       Like[]
  createdAt   DateTime @default(now())
  views       View[]
}

model Like {
  id     String @id @default(uuid())
  User   User   @relation(fields: [userId], references: [id])
  userId String
  Post   Post   @relation(fields: [postId], references: [id])
  postId String


  @@unique(fields: [userId, postId], name: "userId_postId")
}

model View {
  id     String @id @default(uuid())
  User   User   @relation(fields: [userId], references: [id])
  userId String
  Post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@unique(fields: [userId, postId], name: "userId_postId")
}

model Follower {
  id         String @id @default(uuid())
  User       User   @relation("user", fields: [userId], references: [id])
  userId     String
  Follower   User   @relation("follower", fields: [followerId], references: [id])
  followerId String

  // follower    User   @relation("follower", fields: [followerId], references: [id])
  // followerId  String
  // following   User   @relation("following", fields: [followingId], references: [id])
  // followingId String

  // @@id([followerId, followingId])
  // @@unique(fields: [followerId, followingId], name: "followingId_followerId")
  @@unique(fields: [userId, followerId], name: "userId_followerId")
}
